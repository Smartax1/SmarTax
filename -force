# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
export CUDA_VISIBLE_DEVICE = 0

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

alias tunnel='export PORT_NUM=$(shuf -i8000-9000 -n1);export HOST_IP=$(hostname -i);export HOST=$(hostname | awk -F "." "{print $1}");echo "ssh -p 32583 -N -f -L $PORT_NUM:$HOST_IP:$PORT_NUM $USER@s10.s100.vip"'
alias jupyter_tunnel='jupyter-notebook --no-browser --ip=$HOST_IP --port=$PORT_NUM'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

source /usr/local/gromacs/bin/GMXRC
# added by Anaconda3 5.3.1 installer
# >>> conda init >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$(CONDA_REPORT_ERRORS=false '/home/embark/anaconda3/bin/conda' shell.bash hook 2> /dev/null)"
if [ $? -eq 0 ]; then
    \eval "$__conda_setup"
else
    if [ -f "/home/embark/anaconda3/etc/profile.d/conda.sh" ]; then
 . "/home/embark/anaconda3/etc/profile.d/conda.sh"  # commented out by conda initialize
        CONDA_CHANGEPS1=false conda activate base
    else
        \export PATH="/home/embark/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda init <<<
export PATH=/home/embark/anaconda3/bin:/usr/local/gromacs/bin:/home/embark/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/embark/anaconda3/bin::$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/lib:$LD_LIBRARY_PATH
export PATH=/usr/local/cuda/bin:/usr/local/lib:$PATH
export LD_RUN_PATH=/usr/local/lib:$LD_RUN_PATH
# x3dna
export X3DNA='/home/data/Yaoyu/tool/x3dna-v2.4'
export PATH='/home/data/Yaoyu/tool/x3dna-v2.4/bin':/home/embark/gaussian/g16:$PATH
#export PYTHONPATH='/home/embark/anaconda3/envs/mie/lib/python3.8/site-packages':$PYTHONPATH


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export CUPTI_PATH=/usr/local/cuda/extras/CUPTI/lib64
export LD_LIBRARY_PATH=$CUPTI_PATH:$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/lib:/home/embark/openmpi-5.0.3/install/lib:$LD_LIBRARY_PATH

export RASPA_DIR=/home/embark/anaconda3/envs/raspa
export CUPTI_PATH=/usr/local/cuda/extras/CUPTI/lib64
export LD_LIBRARY_PATH=$CUPTI_PATH:$LD_LIBRARY_PATH

alias zeo="/home/embark/zeo++-0.3/network"
alias lammps="/home/data/Zhifei/Softwares/lammps-21Nov2023/src/lmp_mpi"
export GAUSS_EXEDIR="/home/embark/gaussian/g16"


export PATH="/home/embark/openmpi-5.0.3/install/bin:$PATH"
export LD_LIBRARY_PATH="/home/embark/openmpi-5.0.3/install/lib:$LD_LIBRARY_PATH"

XC=~/libxc-6.2.2
export C_INCLUDE_PATH=$XC/include
export LIBRARY_PATH="$XC/lib:$LIBRARY_PATH"
export LD_LIBRARY_PATH="$XC/lib:$LD_LIBRARY_PATH"
